import sqlite3
import hashlib
from datetime import datetime

class DatabaseManager:
    def __init__(self, db_name="users.db"):
        self.db_name = db_name
    
    def view_all_users(self):
        """View all users in the database"""
        try:
            conn = sqlite3.connect(self.db_name)
            cursor = conn.cursor()
            
            cursor.execute("SELECT id, username, created_at FROM users ORDER BY created_at DESC")
            users = cursor.fetchall()
            
            conn.close()
            
            print("\n=== All Users ===")
            print(f"{'ID':<5} {'Username':<20} {'Created At':<20}")
            print("-" * 50)
            
            for user in users:
                print(f"{user[0]:<5} {user[1]:<20} {user[2]:<20}")
            
            print(f"\nTotal users: {len(users)}")
            
        except Exception as e:
            print(f"Error viewing users: {str(e)}")
    
    def delete_user(self, username):
        """Delete a user from the database"""
        try:
            conn = sqlite3.connect(self.db_name)
            cursor = conn.cursor()
            
            cursor.execute("DELETE FROM users WHERE username = ?", (username,))
            
            if cursor.rowcount > 0:
                print(f"User '{username}' deleted successfully")
            else:
                print(f"User '{username}' not found")
            
            conn.commit()
            conn.close()
            
        except Exception as e:
            print(f"Error deleting user: {str(e)}")
    
    def reset_database(self):
        """Reset the database (delete all users)"""
        try:
            conn = sqlite3.connect(self.db_name)
            cursor = conn.cursor()
            
            cursor.execute("DELETE FROM users")
            cursor.execute("DELETE FROM sqlite_sequence WHERE name='users'")
            
            conn.commit()
            conn.close()
            
            print("Database reset successfully - all users deleted")
            
        except Exception as e:
            print(f"Error resetting database: {str(e)}")

if __name__ == "__main__":
    db_manager = DatabaseManager()
    
    while True:
        print("\n=== Database Management ===")
        print("1. View all users")
        print("2. Delete user")
        print("3. Reset database")
        print("4. Exit")
        
        choice = input("\nEnter your choice (1-4): ").strip()
        
        if choice == "1":
            db_manager.view_all_users()
        elif choice == "2":
            username = input("Enter username to delete: ").strip()
            if username:
                db_manager.delete_user(username)
        elif choice == "3":
            confirm = input("Are you sure you want to delete all users? (yes/no): ").strip().lower()
            if confirm == "yes":
                db_manager.reset_database()
        elif choice == "4":
            break
        else:
            print("Invalid choice. Please try again.")
